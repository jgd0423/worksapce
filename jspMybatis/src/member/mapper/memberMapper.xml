<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTO Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="member">
	<sql id="search">
		<choose>
			<when test="search_option == 'id_name_gender' ">
				AND (id LIKE '%' || #{search_data} || '%' OR name LIKE '%' || #{search_data} || '%' OR gender LIKE '%' || #{search_data} || '%')
			</when>
			<when test="search_option != null and search_option != '' and search_data != null and search_data != '' ">
				AND (${search_option} LIKE '%' || #{search_data} || '%')
			</when>
			<otherwise>
				AND no > '0'
			</otherwise>
		</choose>
	</sql>
	
	<select id="getLogin" resultType="member.model.dto.MemberDTO">
		SELECT * FROM ${MEMBER} WHERE id = #{dto.id} AND passwd = #{dto.passwd}
	</select>
	
	<select id="getSelectOne" resultType="member.model.dto.MemberDTO">
		SELECT * FROM
		(
			SELECT m.*,
			LAG(no) OVER (ORDER BY no desc) preNo,
			LAG(id) OVER (ORDER BY no desc) preId,
			LEAD(no) OVER (ORDER BY no desc) nxtNo,
			LEAD(id) OVER (ORDER BY no desc) nxtId
			FROM member m WHERE 1=1
			<!-- <include refid="search"></include> -->
			ORDER BY no DESC
		) WHERE no = #{no}
	</select>
	
	<delete id="setDelete">
		DELETE FROM ${MEMBER} WHERE no = #{dto.no} and passwd = #{dto.passwd}
	</delete>
	
	<update id="setUpdate">
		UPDATE ${MEMBER} 
		SET 
			bornYear = #{dto.bornYear}, 
			postcode = #{dto.postcode}, 
			address = #{dto.address}, 
			detailAddress = #{dto.detailAddress}, 
			extraAddress = #{dto.extraAddress} 
		WHERE no = #{dto.no} and passwd = #{dto.passwd}
	</update>
	
	<insert id="setInsert">
		<selectKey keyProperty="no" resultType="int" order="BEFORE">
			SELECT seq_member.NEXTVAL FROM dual
		</selectKey>
		INSERT INTO ${MEMBER} (
			no, id, passwd, name, gender, bornYear, 
			postcode, address, detailAddress, extraAddress, regiDate
		)
		VALUES (
			#{no}, 
			#{dto.id}, 
			#{dto.passwd}, 
			#{dto.name}, 
			#{dto.gender}, 
			#{dto.bornYear}, 
			#{dto.postcode}, 
			#{dto.address}, 
			#{dto.detailAddress}, 
			#{dto.extraAddress}, 
			CURRENT_TIMESTAMP
		)
	</insert>
	
	<select id="getAllRowsCount" resultType="int">
		SELECT COUNT(*) FROM ${MEMBER} WHERE 1=1
		<include refid="search"></include>
	</select>
	
	<select id="getPagingList" resultType="member.model.dto.MemberDTO">
		SELECT * FROM (SELECT A.*, Rownum Rnum from (
		SELECT * FROM ${MEMBER} WHERE 1=1
		<include refid="search"></include>
		ORDER BY no DESC
		<![CDATA[
		) A) WHERE Rnum >= #{startNum} AND Rnum <= #{endNum}
		]]>
	</select>
	
	<select id="getIdCheck" resultType="int">
		SELECT COUNT(*) FROM ${MEMBER} WHERE id = #{id}
	</select>
	
	<select id="getIdCheckWin" resultType="String">
		SELECT id FROM ${MEMBER} WHERE id = #{id}
	</select>
	
	<select id="getTotalTablesCount" resultType="map">
		SELECT * FROM v_totalTablesCount
	</select>
</mapper>